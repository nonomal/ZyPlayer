name: Build/release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          # cache: 'yarn'

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.access_token }}
          # build_script_name: 'electron:prebuild'
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Upload Artifact (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: zyplayer-mac
          path: ./dist/*-mac-*.dmg
          if-no-files-found: ignore

      - name: Upload Artifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: zyplayer-win
          path: ./dist/*-win-*.exe
          if-no-files-found: ignore

      - name: Upload Artifact (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: zyplayer-linux
          path: |
            ./dist/*.AppImage
            ./dist/*.deb
            ./dist/*.rpm
          if-no-files-found: ignore
